package net.neobp.speedment.ticketstack.public_.tickets.generated;

import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;
import javax.annotation.Generated;
import net.neobp.speedment.ticketstack.public_.tickets.Tickets;

/**
 * The generated base implementation for the manager of every {@link
 * net.neobp.speedment.ticketstack.public_.tickets.Tickets} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedTicketsManagerImpl extends AbstractManager<Tickets> implements GeneratedTicketsManager {
    
    private final TableIdentifier<Tickets> tableIdentifier;
    
    protected GeneratedTicketsManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("ticketstack", "public", "tickets");
    }
    
    @Override
    public TableIdentifier<Tickets> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Tickets>> fields() {
        return Stream.of(
            Tickets.TICKET,
            Tickets.TEXT,
            Tickets.PRIO,
            Tickets.TSTATE
        );
    }
    
    @Override
    public Stream<Field<Tickets>> primaryKeyFields() {
        return Stream.of(
            Tickets.TICKET
        );
    }
}